@page "/recursos/create"
@inject HttpClient http
@inject NavigationManager navigation


<h3>Cadastro de Recursos</h3>
<hr />

<EditForm Model="@novoRecurso" OnValidSubmit="@CriarRecurso">
    <DataAnnotationsValidator />
    <div class="form-group">
        <div class="input-group">
            <span class="input-group-text">Descrição</span>
            <input type="text" aria-label="Descrição" class="form-control" @bind-value="@novoRecurso.Tarefa" />
        </div>
        <ValidationMessage For="@(()=>novoRecurso.Tarefa)" />
    </div>
    <hr />
    <button type="submit" class="btn btn-outline-success">Salvar</button>
    <button class="btn btn-outline-warning" @onclick="@(() => navigation.NavigateTo("recursos"))">Voltar</button>
    @if (!string.IsNullOrEmpty(erro))
    {
        <hr />
        <div class="alert alert-danger" role="alert">
            @erro
        </div>
    }
</EditForm>


@code {
    protected NovoRecurso novoRecurso = new NovoRecurso();
    protected string erro = string.Empty;

    async Task CriarRecurso()
    {
        string urlApi = await Helppers.getUrlAPI(http);
        erro = string.Empty;
        var response = await http.PostAsJsonAsync<NovoRecurso>($"{urlApi}api/v1/Recursos", new NovoRecurso());
        if (response.IsSuccessStatusCode)
            navigation.NavigateTo("recursos");
        else
            erro = $"Um erro ocorreu {Environment.NewLine}{await response.Content.ReadAsStringAsync()}{Environment.NewLine}. Por favor tente mais tarde.";
    }
}
